openapi: 3.0.3
info:
  title: QI API
  version: 0.0.1 
paths:
        
  /getClosedQualityGaps:
    get:
      tags:
        - Closed Quality Gaps
      summary: Not sure about naming
      operationId: getClosedQualityGaps
      parameters: 
        - name: tierNum
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: tierId
          in: query
          required: true
          schema:
            type: string
        - name: assignment
          in: query
          schema:
            type: string
        - name: dataFeeds
          in: query
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGaps'   
      security:
        - api_key: [] 
  /getPatientsMetricWithAllQualityGapsClosed:
    get:
      tags:
        - Closed Quality Gaps
      summary: Not sure about naming
      operationId: getPatientsMetricWithAllQualityGapsClosed
      parameters: 
        - name: tierNum
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: tierId
          in: query
          required: true
          schema:
            type: string
        - name: assignment
          in: query
          schema:
            type: string
        - name: dataFeeds
          in: query
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualityGaps'       
      security:
        - api_key: []  
        
  /getMeasuresData:
    get:
      tags:
        - Measure Data
      summary: Expected return is either one or list of measures
      operationId: getMeasuresData
      parameters:
        - name: id
          in: query
          schema:
            type: array
            items:
              type: string
        - name: tierNum
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: tierId
          in: query
          required: true
          schema:
            type: string
        - name: assignment
          in: query
          schema:
            type: string
        - name: dataFeeds
          in: query
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measure'
               
      security:
        - api_key: []  
        
  /getMeasures:
    get:
      tags:
        - Measure Data
      summary: Get specific measure general info/message
      operationId: getMeasures
      parameters:
        - name: tierNum
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: tierId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/MeasureInfo'
      security:
        - api_key: []   
  /getMeasurePatients:
    get:
      tags:
        - Measure Data
      summary: Get measure patients. (Add filter params?)
      operationId: getMeasurePatients
      parameters:
        - name: measureID
          in: query
          schema:
            type: number
        - name: tierNum
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: tierId
          in: query
          required: true
          schema:
            type: string
        - name: assignment
          in: query
          schema:
            type: string
        - name: dataFeeds
          in: query
          schema:
            type: string
        - name: numPatients
          in: query
          schema:
            type: number
        - name: patientStart
          in: query
          schema:
            type: number
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Patient'
      security:
        - api_key: []   
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
      xml:
        name: order
    Date:
      type: object
      properties: 
        date:
          type: string
          format: date-time 
      xml:
        name: date
    QualityGaps:
      type: object
      properties:
        total:
          type: integer
          format: int64
          example: 100
        closed:
          type: integer
          format: int64
          example: 90
      xml:
        name: qualityGaps
    Measure:
      type: object
      properties:
        measureId: # is needed to pull more details from the DB
          type: number
          example: 1
        numerator: 
          type: integer
          example: 40
        denominator: 
          type: integer
          example: 100
        exclusion: 
          type: string
          example: 'abc'
      xml:
        name: measure
        
    MeasureInfo:
      type: object
      properties:
        message:  
          type: string
          example: "Lorem ipsum dolor sit amet"
        description:  
          type: string
          example: "Lorem ipsum dolor sit amet"
        signifyHealthAverageByYear:  
          type: number
          example: 100
        nationalAverageByYear:  
          type: number
          example: 100
      xml:
        name: measureInfo
        
        
    Patient:
      type: object
      properties:
        mbi:
          type: string
          example: "XXXX-YYYY-ZZZZ"
        fullName:
          type: string
          example: 'Henry, Arthur'
        dob:
          type: string
          format: date
          example: '01/01/1950'
        gender:
          type: string
          example: 'M'
        lastAwv:
          type: string
          format: date
          example: '01/01/2023'
        riskCategory:
          type: string
          example: 'High'
        assignment:
          type: string
          example: 'Attributed'
        attributedProvider:
          type: string
          example: 'Perkins, Leroy'
        lastServiceDate:
          type: string
          format: date
          example: '02/02/2023'
      xml:
        name: patient
 
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header